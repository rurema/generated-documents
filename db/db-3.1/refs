class,ARGF,inplace,インプレースエディットモード
class,FileUtils,options,オプションの説明
class,GC,tuning_gc,チューニングのための環境変数
class,IO,io_binmode,バイナリモード
class,IO,io_encoding,IO のエンコーディングとエンコーディングの変換
class,IO,m17n,多言語化と IO のエンコーディング
class,Numeric,division,除法と商・剰余
class,OpenSSL::X509,verify_error,検証時エラー定数
class,OpenStruct,caveats,注意事項
class,Proc,block,Proc オブジェクトをブロック付きメソッド呼び出しに使う
class,Proc,lambda_proc,lambda と proc と Proc.new とイテレータの違い
class,Proc,orphan,orphan な手続きオブジェクトの挙動
class,Proc,should_use_next,手続きを中断して値を返す
class,RDoc::Options,custom_options,カスタムオプション
class,Rinda::TupleSpace,renewer,タプルの寿命と renewer
class,String,m17n,多言語化と文字列のエンコーディング
class,String,mutable,破壊的な変更
class,Thread,exception,例外発生時のスレッドの振る舞い
doc,glossary,A,A
doc,glossary,B,B
doc,glossary,C,C
doc,glossary,D,D
doc,glossary,E,E
doc,glossary,F,F
doc,glossary,G,G
doc,glossary,I,I
doc,glossary,J,J
doc,glossary,M,M
doc,glossary,N,N
doc,glossary,O,O
doc,glossary,R,R
doc,glossary,S,S
doc,glossary,Y,Y
doc,glossary,a,あ
doc,glossary,ha,は
doc,glossary,ka,か
doc,glossary,ma,ま
doc,glossary,na,な
doc,glossary,ra,ら
doc,glossary,sa,さ
doc,glossary,ta,た
doc,glossary,wa,わ
doc,glossary,ya,や
doc,marshal_format,Object,Object
doc,marshal_format,class_module,Class/Module
doc,marshal_format,instance_variable,instance variable
doc,spec/call,block,ブロック付きメソッド呼び出し
doc,spec/call,block_arg,ブロックパラメータの挙動
doc,spec/call,call_method,.() および ::() 形式のメソッド呼び出し（callメソッドの糖衣構文）
doc,spec/call,numbered_parameters,番号指定パラメータ
doc,spec/call,super,super
doc,spec/call,yield,yield
doc,spec/control,BEGIN,BEGIN
doc,spec/control,END,END
doc,spec/control,begin,begin
doc,spec/control,break,break
doc,spec/control,case,case
doc,spec/control,for,for
doc,spec/control,if,if
doc,spec/control,next,next
doc,spec/control,raise,raise
doc,spec/control,redo,redo
doc,spec/control,retry,retry
doc,spec/control,return,return
doc,spec/control,unless,unless
doc,spec/control,until,until
doc,spec/control,while,while
doc,spec/def,alias,alias
doc,spec/def,class,クラス定義
doc,spec/def,class_method,クラスメソッドの定義
doc,spec/def,defined,defined?
doc,spec/def,eval_method,メソッドの評価
doc,spec/def,limit,呼び出し制限
doc,spec/def,method,メソッド定義
doc,spec/def,module,モジュール定義
doc,spec/def,nest_method,メソッド定義のネスト
doc,spec/def,operator,演算子式の定義
doc,spec/def,singleton_class,特異クラス定義
doc,spec/def,singleton_method,特異メソッド定義
doc,spec/def,undef,undef
doc,spec/lambda_proc,block,Proc オブジェクトをブロック付きメソッド呼び出しに使う
doc,spec/lambda_proc,def,手続きオブジェクトとは
doc,spec/lambda_proc,lambda_proc,lambda と proc と Proc.new とイテレータの違い
doc,spec/lambda_proc,orphan,orphan な手続きオブジェクトの挙動
doc,spec/lambda_proc,should_use_next,手続きを中断して値を返す
doc,spec/lexical,comment,コメント
doc,spec/lexical,embed,埋め込みドキュメント
doc,spec/lexical,identifier,識別子
doc,spec/lexical,reserved,予約語
doc,spec/literal,array,配列式
doc,spec/literal,backslash,バックスラッシュ記法
doc,spec/literal,char,文字リテラル
doc,spec/literal,command,コマンド出力
doc,spec/literal,exp,式展開
doc,spec/literal,hash,ハッシュ式
doc,spec/literal,here,ヒアドキュメント (行指向文字列リテラル)
doc,spec/literal,num,数値リテラル
doc,spec/literal,percent,%記法
doc,spec/literal,range,範囲オブジェクト
doc,spec/literal,regexp,正規表現リテラル
doc,spec/literal,string,文字列リテラル
doc,spec/literal,symbol,シンボル
doc,spec/m17n,7bit_clean,7bit クリーンな文字列
doc,spec/m17n,ascii_compat,ASCII互換エンコーディング
doc,spec/m17n,binary,バイナリの取扱い
doc,spec/m17n,convert,エンコーディングの変更
doc,spec/m17n,dummy,ダミーエンコーディング
doc,spec/m17n,encoding,Ruby がサポートするエンコーディング
doc,spec/m17n,incompat,1.8 からのスクリプトエンコーディングに関する非互換性
doc,spec/m17n,literal,リテラルのエンコーディング
doc,spec/m17n,m17n_prog,M17N プログラミングの基本
doc,spec/m17n,magic_comment,magic comment
doc,spec/m17n,ruby18,Ruby 1.8 からの移行
doc,spec/m17n,script_encoding,スクリプトエンコーディング
doc,spec/operator,and,and
doc,spec/operator,assign,代入
doc,spec/operator,cond,条件演算子
doc,spec/operator,multiassign,多重代入
doc,spec/operator,not,not
doc,spec/operator,or,or
doc,spec/operator,range,範囲式
doc,spec/operator,range_cond,条件式としての範囲式
doc,spec/operator,selfassign,自己代入
doc,spec/pattern_matching,current_feature_status,機能の現状
doc,spec/pattern_matching,guard_clauses,ガード節
doc,spec/pattern_matching,matching_non_primitive_objects,非プリミティブなオブジェクトのマッチ: deconstruct メソッドと deconstruct_keys メソッド
doc,spec/pattern_matching,pattern_syntax,付記A: パターンのシンタックス
doc,spec/pattern_matching,patterns,パターン
doc,spec/pattern_matching,some_undefined_behavior_examples,付記B: `未定義` の振る舞いの例
doc,spec/pattern_matching,variable_binding,変数の束縛
doc,spec/pattern_matching,variable_pinning,変数のピン留め
doc,spec/program,exp,式
doc,spec/program,terminate,プログラムの終り
doc,spec/regexp,absenceop,非包含オペレータ (absence operator) (実験的)
doc,spec/regexp,anchor,アンカー
doc,spec/regexp,anychar,任意の1文字
doc,spec/regexp,capture,キャプチャ
doc,spec/regexp,char,文字
doc,spec/regexp,charclass_opt,オプション
doc,spec/regexp,charclass_posix,POSIX 文字クラス
doc,spec/regexp,charclass_prop,Unicode プロパティによる文字クラス指定
doc,spec/regexp,charclass_short,文字クラスの略記法
doc,spec/regexp,comment,コメント
doc,spec/regexp,cond,条件分岐
doc,spec/regexp,encoding,エンコーディング
doc,spec/regexp,expansion,式展開
doc,spec/regexp,free_format_mode,フリーフォーマットモード
doc,spec/regexp,grouping,グループ
doc,spec/regexp,grouping_atomic,アトミックグループ(atomic grouping)
doc,spec/regexp,list,一覧
doc,spec/regexp,lookahead_lookbehind,先読み、後読み(lookahead\, lookbehind)
doc,spec/regexp,metachar,メタ文字列とリテラル、メタ文字とエスケープ
doc,spec/regexp,option,オプション
doc,spec/regexp,quantifier,繰り返し
doc,spec/regexp,quantifier_possesive,絶対最大量指定子(possessive quantifier)
doc,spec/regexp,quantifier_reluctant,最小量指定子(reluctant quantifier)
doc,spec/regexp,references,参考文献
doc,spec/regexp,selector,選択
doc,spec/regexp,specialvar,特殊変数
doc,spec/regexp,str,特別な文字列に対するマッチ
doc,spec/regexp,string,文字クラス
doc,spec/regexp,subexp,部分式呼び出し(subexpression call)
doc,spec/rubycmd,cmd_option,コマンドラインオプション
doc,spec/rubycmd,shebang,インタプリタ行の解釈
doc,spec/safelevel,level4,レベル 4
doc,spec/thread,exception,例外発生時のスレッドの振る舞い
doc,spec/variables,builtin,組み込み変数
doc,spec/variables,class,クラス変数
doc,spec/variables,class_var_scope,クラス変数のスコープ
doc,spec/variables,const,定数
doc,spec/variables,global,グローバル変数
doc,spec/variables,instance,インスタンス変数
doc,spec/variables,local,ローカル変数
doc,spec/variables,prio,定数参照の優先順位
doc,spec/variables,pseudo,擬似変数
doc,symref,ac,`
doc,symref,and,&
doc,symref,ast,*
doc,symref,at,@
doc,symref,backslash,\
doc,symref,colon,:
doc,symref,comma,\,
doc,symref,dollar,$
doc,symref,dq,"
doc,symref,eq,=
doc,symref,ex,!
doc,symref,hat,^
doc,symref,langl,<
doc,symref,lbra,{
doc,symref,lbra2,[
doc,symref,lbra3,(
doc,symref,minus,-
doc,symref,num,#
doc,symref,or,|
doc,symref,per,%
doc,symref,period,.
doc,symref,plus,+
doc,symref,q,?
doc,symref,rangl,>
doc,symref,rbra,}
doc,symref,rbra2,]
doc,symref,rbra3,)
doc,symref,semicolon,;
doc,symref,slash,/
doc,symref,sq,'
doc,symref,tilde,~
doc,symref,under,_
library,bigdecimal,internal_structure,内部構造
library,bigdecimal,precision,計算精度について
library,irb,configure_sub_irb,サブ irb の設定
library,irb,customize_prompt,プロンプトのカスタマイズ
library,irb,history,履歴の保存
library,irb,inspect_mode,実行結果の出力方式
library,openssl,references,参考文献
library,optparse,argv,ARGV の機能
library,optparse,help,ヘルプ
library,optparse,hyphen_start_file,'-'で始まるファイル名
library,optparse,longoption,ロングオプション
library,optparse,optionarg,オプションの引数
library,optparse,optiondef,オプションの定義
library,optparse,subcmd,サブコマンド
library,rdoc,escape,エスケープ
library,rdoc,headline,見出し
library,rdoc,italic_bold_typewriter,イタリック体、ボールド体、タイプライター体
library,rdoc,labeled_list,ラベル付きリスト
library,rdoc,list,リスト
library,rdoc,markup,Markup
library,rdoc,ruled_line,罫線
library,rdoc,saved_options,オプションの保存
library,rdoc,usage,使いかた
library,rdoc/markup,output_format,出力可能な形式
library,rexml/parsers/pullparser,event_type,イベントの種類とパラメータ
library,rexml/parsers/streamparser,example,StreamParserの例
library,rexml/parsers/ultralightparser,nodes,ノードの表現
library,rinda/rinda,tuplepattern,タプルのパターンについて
library,rubygems,gem_command,gem コマンドの使い方
library,socket,host_format,ホスト指定形式
library,socket,pack_string,ソケットアドレス構造体を pack した文字列
library,socket,service_format,サービス指定形式
method,Kernel.#lambda,block,Proc オブジェクトをブロック付きメソッド呼び出しに使う
method,Kernel.#lambda,lambda_proc,lambda と proc と Proc.new とイテレータの違い
method,Kernel.#lambda,orphan,orphan な手続きオブジェクトの挙動
method,Kernel.#lambda,should_use_next,手続きを中断して値を返す
method,Kernel.#proc,block,Proc オブジェクトをブロック付きメソッド呼び出しに使う
method,Kernel.#proc,lambda_proc,lambda と proc と Proc.new とイテレータの違い
method,Kernel.#proc,orphan,orphan な手続きオブジェクトの挙動
method,Kernel.#proc,should_use_next,手続きを中断して値を返す
