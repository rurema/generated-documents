names=permute!
visibility=public
kind=defined
source_location=refm/api/src/optparse/OptionParser:958

--- permute!(argv = self.default_argv, into: nil)    -> [String]

与えられた argv を破壊的にパースします。argv からオプションがすべて取り除かれます。
オプションではないコマンドの引数(下の例で言うと somefile)があってもパースを中断しません。
argv を返します。

下の例で言うと、order と違いコマンドの引数 somefile よりも後ろにオプションを置くことが
できます。

@param argv パースしたい引数を文字列の配列で指定します。

@param into オプションを格納するハッシュを指定します。
            指定したハッシュにはオプションの名前をキーとして、[[m:OptionParser#on]]に渡されたブロックの値が格納されます。
            キーの名前はロングオプションが定義されていればロングオプションの値を、
            ショートオプションのみの場合はショートオプションの値から、先頭の "-" を除いてシンボル化した値が使用されます。

@raise OptionParser::ParseError パースに失敗した場合、発生します。
                                実際は OptionParser::ParseError のサブク
                                ラスになります。

//emlist[opt.rb][ruby]{
require 'optparse'
opt = OptionParser.new

opt.on('-a [VAL]') {|v| p :a }
opt.on('-b ') {|v| p :b }

opt.permute!(ARGV)
p ARGV
//}
↓
  $ ruby opt.rb -a foo somefile -b
  :a
  :b
  ["somefile"]

