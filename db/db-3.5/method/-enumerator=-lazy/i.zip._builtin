names=zip
visibility=public
kind=defined
source_location=refm/api/src/_builtin/Enumerator__Lazy:219

--- zip(*lists)  -> Enumerator::Lazy
--- zip(*lists) {|v1, v2, ...| ... } -> nil

[[m:Enumerable#zip]] と同じですが、配列ではなくEnumerator::Lazy を返します。

ただし一貫性のため、ブロック付きで呼び出した場合は Enumerable#zip と
同じ挙動になります。

//emlist[例][ruby]{
1.step.lazy.zip(('a'..'z').cycle)
# => #<Enumerator::Lazy: #<Enumerator::Lazy: #<Enumerator: 1:step>>:zip(#<Enumerator: "a".."z":cycle>)>

1.step.lazy.zip(('a'..'z').cycle).take(30).force.last(6)
# => [[25, "y"], [26, "z"], [27, "a"], [28, "b"], [29, "c"], [30, "d"]]
//}

@see [[m:Enumerable#zip]]

