names=to_proc
visibility=public
kind=defined
source_location=refm/api/src/_builtin/Symbol:170

--- to_proc -> Proc
self に対応する Proc オブジェクトを返します。

生成される Proc オブジェクトを呼びだす([[m:Proc#call]])と、
Proc#callの第一引数をレシーバとして、 self という名前のメソッドを
残りの引数を渡して呼びだします。

生成される Proc オブジェクトは lambda です。
//emlist[][ruby]{
:object_id.to_proc.lambda? # => true
//}

//emlist[明示的に呼ぶ例][ruby]{
:to_i.to_proc["ff", 16]  # => 255 ← "ff".to_i(16)と同じ
//}

//emlist[暗黙に呼ばれる例][ruby]{
# メソッドに & とともにシンボルを渡すと
# to_proc が呼ばれて Proc 化され、
# それがブロックとして渡される。
(1..3).collect(&:to_s)  # => ["1", "2", "3"]
(1..3).select(&:odd?)   # => [1, 3]
//}

@see [[ref:d:spec/call#block]]

