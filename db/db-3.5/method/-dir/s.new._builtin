names=new,open
visibility=public
kind=defined
source_location=refm/api/src/_builtin/Dir:334

--- new(path)                                                      -> Dir
--- new(path, encoding: Encoding.find("filesystem"))               -> Dir
--- open(path)                                                     -> Dir
--- open(path, encoding: Encoding.find("filesystem"))              -> Dir
--- open(path) {|dir| ...}                                         -> object
--- open(path, encoding: Encoding.find("filesystem")) {|dir| ...}  -> object

path に対するディレクトリストリームをオープンして返します。

ブロックを指定して呼び出した場合は、ディレクトリストリームを
引数としてブロックを実行します。ブロックの実行が終了すると、
ディレクトリは自動的にクローズされます。
ブロックの実行結果を返します。

@param path ディレクトリのパスを文字列で指定します。

@param encoding ディレクトリのエンコーディングを文字列か
                [[c:Encoding]] オブジェクトで指定します。省略した場合は
                ファイルシステムのエンコーディングと同じになります。

@raise Errno::EXXX オープンに失敗した場合に発生します。

//emlist[例: Dir.new][ruby]{
require 'tmpdir'

Dir.mktmpdir do |tmpdir|
  d = Dir.new(tmpdir)
  p d.class         # => Dir
  p d.read.encoding # => #<Encoding:UTF-8>
  d.close

  d = Dir.new(tmpdir, encoding: Encoding::UTF_8)
  p d.class         # => Dir
  p d.read.encoding # => #<Encoding:UTF-8>
  d.close
end
//}

//emlist[例: Dir.open][ruby]{
require 'tmpdir'

Dir.mktmpdir do |tmpdir|
  d = Dir.open(tmpdir, encoding: Encoding::UTF_8)
  p d.class         # => Dir
  p d.read.encoding # => #<Encoding:UTF-8>
  d.close

  Dir.open(tmpdir, encoding: Encoding::UTF_8) do |d|
    p d.class         # => Dir
    p d.read.encoding # => #<Encoding:UTF-8>
  end
end
//}

