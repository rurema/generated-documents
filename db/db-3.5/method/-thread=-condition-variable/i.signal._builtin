names=signal
visibility=public
kind=defined
source_location=refm/api/src/thread/ConditionVariable:190

--- signal -> self

状態変数を待っているスレッドを1つ再開します。再開された
スレッドは [[m:Thread::ConditionVariable#wait]]
で指定した mutex のロックを試みます。

@return 常に self を返します。

//emlist[例][ruby]{
mutex = Mutex.new
cv = ConditionVariable.new
flg = true

3.times {
  Thread.start {
    mutex.synchronize {
      puts "a1"
      while (flg)
        cv.wait(mutex)
      end
      puts "a2"
    }
  }
}

Thread.start {
  mutex.synchronize {
    flg = false
    cv.signal
  }
}

sleep 1

# => a1
# => a1
# => a1
# => a2
//}

