names=new
visibility=public
kind=defined
source_location=refm/api/src/logger.rd:273

--- new(logdev, shift_age = 0, shift_size = 1048576, level: Logger::Severity::DEBUG, progname: nil, formatter: Formatter.new, datetime_format: nil, binmode: false, shift_period_suffix: '%Y%m%d', reraise_write_errors: [], skip_header: false) -> Logger

Logger オブジェクトを生成します。

@param logdev ログを書き込むファイル名か、 IO オブジェクト(STDOUT, STDERR など)を指定します。

@param shift_age ログファイルを保持する数か、ログファイルを切り替える頻度を指定します。
                 頻度には daily, weekly, monthly を文字列で指定することができます。
                 省略すると、ログの保存先を切り替えません。

@param shift_size shift_age を整数で指定した場合のみ有効です。
                  このサイズでログファイルを切り替えます。

@param level ログに記録する時のログレベルを指定します。省略した場合は
             [[m:Logger::Severity::DEBUG]] です。

@param progname ログに記録する時のプログラム名を指定します。省略した場合は nil です。

@param formatter ログに記録する時のログのフォーマッタを指定します。
                 省略した場合は [[c:Logger::Formatter]] インスタンスです。

@param datetime_format ログに記録する時の日時のフォーマットを指定します。
                       省略した場合は '%Y-%m-%d %H:%M:%S' です。

@param binmode ログに記録する時にバイナリモードを使用するかどうかを指定します。
               省略した場合は false です。
               Logger v1.4.0 以降で利用可能です。

@param shift_period_suffix daily、weekly、monthlyでログファイルの切り替
                           えを行う時のログファイルの名の末尾に追加する
                           文字列のフォーマットを指定します。
                           省略した場合は '%Y%m%d' です。

@param reraise_write_errors ログ書き込み時にエラーが発生した場合に raise される例外クラスの配列。
                            省略した場合は空配列です。
                            Logger v1.6.1 以降で利用可能です。

@param skip_header ログファイルの先頭にヘッダー行を出力するかどうかを指定します。
                   true の場合は出力しません。省略した場合は false です。
                   Logger v1.7.0 以降で利用可能です。


//emlist[例][ruby]{
require 'logger'
logger = Logger.new(STDERR)
logger = Logger.new(STDOUT)
logger = Logger.new('logfile.log')

file = File.open('foo.log', File::WRONLY | File::APPEND | File::CREAT)
logger = Logger.new(file, 'daily')
logger = Logger.new(file, level: :info)
logger = Logger.new(file, progname: 'progname')
logger = Logger.new(file, formatter: formatter)
logger = Logger.new(file, datetime_format: '%Y-%m-%d %H:%M:%S')
//}


