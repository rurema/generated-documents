type=class
superclass=Object
included=Enumerable,OpenSSL=SSL=SocketForwarder,OpenSSL=Buffering
extended=
dynamically_included=
dynamically_extended=
library=openssl
aliases=
aliasof=
source_location=refm/api/src/openssl/SSL__SSLSocket:371

ソケットをラップして SSL での認証と暗号通信を実現するためのクラスです。


=== 例

SSL/TLS サーバに接続して write します。

  require 'socket'
  require 'openssl'
  include OpenSSL
  
  ctx = SSL::SSLContext.new
  ctx.set_params(verify_mode: OpenSSL::SSL::VERIFY_PEER, verify_hostname: true)
  
  soc = TCPSocket.new('www.example.com', 443)
  ssl = SSL::SSLSocket.new(soc, ctx)
  ssl.hostname = 'www.example.com' # SNI
  ssl.connect
  ssl.post_connection_check('www.example.com')
  raise "verification error" if ssl.verify_result != OpenSSL::X509::V_OK
  print ssl.peer_cert.to_text
  
  # HTTP リクエストを送信
  ssl.write("GET / HTTP/1.1\r\n")
  ssl.write("Host: www.example.com\r\n")
  ssl.write("Connection: close\r\n")
  ssl.write("\r\n")
  print ssl.read
  
  ssl.close
  soc.close
